
/*
 * Filename: sc_buttons_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: Signalclass
 */

#ifndef _H_DEFINE_SC_BUTTONS_TYPE
#define _H_DEFINE_SC_BUTTONS_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_BUTTONS_INCLUDES */

/* USER CODE END SC_BUTTONS_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_BUTTONS signal    
 **********************************************************************/

/* USER CODE START SC_BUTTONS_USERDEFINITIONS */

/* USER CODE END SC_BUTTONS_USERDEFINITIONS */

typedef 
/* USER CODE START SC_BUTTONS_SIGNALDATADEFINITION */
struct
{
//	#error "Provide your data structure"
    boolean_t m_buttonRightPressed;
    boolean_t m_buttonLeftPressed;
    
    uint8_t m_buttonRightPressedTime;
} 
/* USER CODE END SC_BUTTONS_SIGNALDATADEFINITION */
SC_BUTTONS_data_t;

/* USER CODE START InitSC_BUTTONS */
//#error "Provide a sensible init value"
#define SC_BUTTONS_INIT_DATA ((SC_BUTTONS_data_t){FALSE, FALSE, 0})
/* USER CODE END InitSC_BUTTONS */


/**
 * Default IN driver API
 * \param SC_BUTTONS_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SC_BUTTONS_driverIn(SC_BUTTONS_data_t *const data);




/* USER CODE START SC_BUTTONS_USERFUNCTIONS */

/* USER CODE END SC_BUTTONS_USERFUNCTIONS */


#endif