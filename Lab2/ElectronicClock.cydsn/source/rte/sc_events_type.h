
/*
 * Filename: sc_events_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: Signalclass
 */

#ifndef _H_DEFINE_SC_EVENTS_TYPE
#define _H_DEFINE_SC_EVENTS_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_EVENTS_INCLUDES */
    
#include "statemachine_type.h"
#include "ringbuffer.h"

/* USER CODE END SC_EVENTS_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_EVENTS signal    
 **********************************************************************/

/* USER CODE START SC_EVENTS_USERDEFINITIONS */
    

/* USER CODE END SC_EVENTS_USERDEFINITIONS */

typedef 
/* USER CODE START SC_EVENTS_SIGNALDATADEFINITION */
struct
{
//	#error "Provide your data structure"
    STATE_event_t m_event;
    STATE_event_t buffer[200];
    ringbuffer_hdl_t *eventBuffer;
    
    
    
} 
/* USER CODE END SC_EVENTS_SIGNALDATADEFINITION */
SC_EVENTS_data_t;

/* USER CODE START InitSC_EVENTS */
//#error "Provide a sensible init value"
//#define SC_EVENTS_INIT_DATA ((SC_EVENTS_data_t){NULL})
//
//SC_EVENTS_data_t init_SC_EVENTS_data();
//
//SC_EVENTS_data_t init_SC_EVENTS_data() {
//    SC_EVENTS_data_t data;
//    static STATE_event_t payloadBuffer[200];
//
//    // Initialize payloadBuffer elements to 0
//
//
//    // Initialize m_event
//    data.m_event = NONE;
//
//    // Allocate memory for eventBuffer (ringbuffer_hdl_t) dynamically
//    static ringbuffer_hdl_t eventBuffer = {
//        .size = 200,
//        .filled = 0,
//        .idx_write = 0,
//        .idx_read = 0,
//        .p_payload = payloadBuffer,
//        .erika_ressource = res_events_Lock
//    };
//
//    // Set eventBuffer pointer in SC_EVENTS_data_t
//    data.eventBuffer = (ringbuffer_hdl_t *)&eventBuffer;
//    return data;
//}


#define SC_EVENTS_INIT_DATA ((SC_EVENTS_data_t){NONE, {0},  NULL})



/* USER CODE END InitSC_EVENTS */





/* USER CODE START SC_EVENTS_USERFUNCTIONS */

/* USER CODE END SC_EVENTS_USERFUNCTIONS */


#endif